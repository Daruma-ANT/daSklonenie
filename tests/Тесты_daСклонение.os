#Использовать asserts
#Использовать ".."

 
//*****************************************************************
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт

    ВсеТесты = Новый Массив;

    // склонение ФИО
    ВсеТесты.Добавить("СклонениеФИОСпустымРежимом");
    ВсеТесты.Добавить("СклонениеФИОПоЧастям");
    ВсеТесты.Добавить("СклонениеФИОСУчнтомРегистра");
    
    ВсеТесты.Добавить("ОпределениеРода");

    // склонение профессии
    ВсеТесты.Добавить("СклонениеПрофессии");
    ВсеТесты.Добавить("СклонениеПрофессииСОпределениемРегистраРезультата");

    // склонение существительных, прилагательных, глаголов, географических наименований
    ВсеТесты.Добавить("СклонениеСуществительныхИПрилагательных");
    ВсеТесты.Добавить("СклонениеВоМножественномЧисле");
    ВсеТесты.Добавить("СклонениеГеографическихНаименований");
    ВсеТесты.Добавить("СклонениеГлаголаПоРодамИПоЧислам");

    // склонение чисел, валют, единиц измерения
    ВсеТесты.Добавить("СклонениеЧислаСтрокой");
    ВсеТесты.Добавить("СклонениеЧисла");
    ВсеТесты.Добавить("СклонениеЧислаИИсчислимого");
    ВсеТесты.Добавить("СклонениеСНеизменяемымСловом");
    ВсеТесты.Добавить("СклонениеЧислаБезПреобразованияВПропись");
    ВсеТесты.Добавить("СклонениеВВинительномПадежеНеодушевленныхСуществительных");
    ВсеТесты.Добавить("СклонениеВВинительномПадежеОдушевленныхСуществительных");

    Возврат ВсеТесты;

КонецФункции
 
//*****************************************************************
Процедура ПередЗапускомТеста() Экспорт


КонецПроцедуры
 
//*****************************************************************
Процедура ПослеЗапускаТеста() Экспорт


КонецПроцедуры


//////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ДЛЯ ТЕСТИРОВАНИЯ ФУНКЦИОНАЛА

//*****************************************************************

Процедура СклонениеФИОСпустымРежимом() Экспорт

    // запуск выполняется в режиме "ФИО" или с пустым режимом, в таком случае - режим "ФИО" установится по умолчанию
	Результат = МенеджерСклонения.daСклонение("Пухов Федор Николаевич", "Р", "М", "ФИО");
	Ожидаем.Что(Результат).Равно("Пухова Федора Николаевича");
	
	Результат = МенеджерСклонения.daСклонение("Пухова Ольга Сергеевна", "Д");
    Ожидаем.Что(Результат).Равно("Пуховой Ольге Сергеевне");
      
КонецПроцедуры 

Процедура СклонениеФИОПоЧастям() Экспорт

    //порядок символов "Ф", "И", "О" в параметре режима определяет порядок частей ФИО в склоняемом выражении, т.к. фамилия, имя и отчество склоняются по разным правилам
	Результат = МенеджерСклонения.daСклонение("Мария Ивановна Кожедуб", "Т", , "ИОФ");
	Ожидаем.Что(Результат).Равно("Марией Ивановной Кожедуб"); 
	
	Результат = МенеджерСклонения.daСклонение("В. Тёркин", "П", , "ИФ");
	Ожидаем.Что(Результат).Равно("В. Тёркине");
	
	Результат = МенеджерСклонения.daСклонение("Тихончук", "Р", "Ж", "Ф");
	Ожидаем.Что(Результат).Равно("Тихончук");
      
КонецПроцедуры  

Процедура СклонениеФИОСУчнтомРегистра()Экспорт

	//форматная строка может содержать ключевые слова "Фамилия", "Имя", "Отчество" или сокращения "Ф", "И", "О", их регистр определяет регистр выводимого результата
	Результат = МенеджерСклонения.daСклонение("Чапаев Василий Иванович", "Р", , , "Имя Отчество Фамилия");
	Ожидаем.Что(Результат).Равно("Василия Ивановича Чапаева");
	
	Результат = МенеджерСклонения.daСклонение("Чапаев Василий Иванович", "Д", , , "Фамилия И. О.");
	Ожидаем.Что(Результат).Равно("Чапаеву В. И.");
	
	Результат = МенеджерСклонения.daСклонение("Чапаев Василий Иванович", "И", , , "отчество: Имя - ФАМИЛИЯ");
	Ожидаем.Что(Результат).Равно("иванович: Василий - ЧАПАЕВ");
      
КонецПроцедуры

//*****************************************************************
Процедура ОпределениеРода() Экспорт
	
	//если с параметром _Род передать переменную со значением "?", в нее вернется род в случае успеха или останется "?" в случае неудачи
	ПоискРода = "?"; 
	Результат = МенеджерСклонения.daСклонение("Лукашенко Александр Григорьевич", "Р", ПоискРода);
	Ожидаем.Что(ПоискРода).Равно("М");
	
	ПоискРода = "?"; 
	Результат = МенеджерСклонения.daСклонение("Лукашенко А. Г.", "Р", ПоискРода); 
	Ожидаем.Что(ПоискРода).Равно("?");
	
КонецПроцедуры
 
//*****************************************************************
Процедура СклонениеПрофессии() Экспорт
	
	//запуск выполняется в режиме "Д":
	Результат = МенеджерСклонения.daСклонение("Ведущий программист 1С и консультант по ЗиК", "Р", , "Д");
	Ожидаем.Что(Результат).Равно("Ведущего программиста 1С и консультанта по ЗиК");
	
КонецПроцедуры

Процедура СклонениеПрофессииСОпределениемРегистраРезультата() Экспорт
	
	//в этом и остальных режимах форматная строка определяет регистр слов результата и задается при помощи литер, если литера не задана - остается исходный регистр,
	//А - первая буква первого слова, Б - первая буква остальных слов, В - все остальные буквы всех слов, Г - специально для аббревиатур:
	Результат = МенеджерСклонения.daСклонение("Ведущий программист 1С и Консультант по ЗиК", "Р", , "Д", "АБВГ");
	Ожидаем.Что(Результат).Равно("ВЕДУЩЕГО ПРОГРАММИСТА 1С И КОНСУЛЬТАНТА ПО ЗИК");
	
	Результат = МенеджерСклонения.daСклонение("Ведущий программист 1С и Консультант по ЗиК", "Р", , "Д", "абвг");
	Ожидаем.Что(Результат).Равно("ведущего программиста 1с и консультанта по зик");
	
	Результат = МенеджерСклонения.daСклонение("Ведущий программист 1С и Консультант по ЗиК", "Р", , "Д", "АБ");
	Ожидаем.Что(Результат).Равно("Ведущего Программиста 1С и Консультанта По ЗиК");
	
	Результат = МенеджерСклонения.daСклонение("Ведущий программист 1С и Консультант по ЗиК", "Р", , "Д", "Абв");
	Ожидаем.Что(Результат).Равно("Ведущего программиста 1С и консультанта по ЗиК");
	
КонецПроцедуры

Процедура СклонениеСуществительныхИПрилагательных() Экспорт
	
	//запуск выполняется в режиме "В":
	Результат = МенеджерСклонения.daСклонение("Генеральная доверенность", "Р", , "В");
    Ожидаем.Что(Результат).Равно("Генеральной доверенности");
    	
КонецПроцедуры

Процедура СклонениеВоМножественномЧисле() Экспорт
	
	//в этом режиме возможно склонение в форме множественного числа, для этого в параметре _Род указывается "Н" (мНожественный):
	Результат = МенеджерСклонения.daСклонение("Устав", "И", "Н", "В");
    Ожидаем.Что(Результат).Равно("Уставы");
    
	Результат = МенеджерСклонения.daСклонение("Генеральная доверенность", "Р", "Н", "В");
    Ожидаем.Что(Результат).Равно("Генеральных доверенностей");
	
КонецПроцедуры

Процедура СклонениеГеографическихНаименований() Экспорт
	
	//запуск выполняется в режиме "В":
	Результат = МенеджерСклонения.daСклонение("Санкт-Петербург", "П", , "В");
    Ожидаем.Что(Результат).Равно("Санкт-Петербурге");
	
КонецПроцедуры

Процедура СклонениеГлаголаПоРодамИПоЧислам() Экспорт
	
	//возможно склонение глаголов по родам и по числам, исходный глагол может быть в форме любого рода и числа, но в настоящем времени:
     Результат = МенеджерСклонения. daСклонение("Подготовили", "И", "Ж", "В");
    Ожидаем.Что(Результат).Равно("Подготовила");
        
    Результат = МенеджерСклонения.daСклонение("Утвердило ответственное лицо", "И", "Н", "В");
    Ожидаем.Что(Результат).Равно("Утвердили ответственные лица");
	
КонецПроцедуры

//*****************************************************************

Процедура СклонениеЧислаСтрокой() Экспорт
	
	//запуск выполняется в режиме "Ч", возможно склонение по родам:
	Результат = МенеджерСклонения.daСклонение("Двадцать один", "И", "С", "Ч");
	Ожидаем.Что(Результат).Равно("Двадцать одно");
	
	Результат = МенеджерСклонения.daСклонение("Двадцать один", "Р", "Ж", "Ч");
	Ожидаем.Что(Результат).Равно("Двадцати одной");
		
КонецПроцедуры

Процедура СклонениеЧисла() Экспорт
	
	//параметр _Выражение может иметь тип "Число":
	Результат = МенеджерСклонения.daСклонение(21, "И", "С", "Ч");
	Ожидаем.Что(Результат).Равно("Двадцать одно");
	
	Результат = МенеджерСклонения.daСклонение(21, "Р", "Ж", "Ч");
	Ожидаем.Что(Результат).Равно("Двадцати одной");
		
КонецПроцедуры

Процедура СклонениеЧислаИИсчислимого() Экспорт

	//возможно склонение сочетания числа и исчислимого (валюты, единицы измерения, прочих существительных)
	Результат = МенеджерСклонения.daСклонение("32 доска", "Р", , "Ч");
    Ожидаем.Что(Результат).Равно("Тридцати двух досок");

    //исчислимое должно быть в начальной форме (именительный падеж, единственное число):
	Результат = МенеджерСклонения.daСклонение("23 австралийский доллар", "Р", , "Ч");
	Ожидаем.Что(Результат).Равно("Двадцати трех австралийских долларов");
	
	//исключение для популярных валют, они могут быть в формате встроенной функции ЧислоПрописью()- "5 рублей", "13 долларов"):
	Результат = МенеджерСклонения.daСклонение("14 рублей 88 копеек", "Р", , "Ч", "абв");
	Ожидаем.Что(Результат).Равно("четырнадцати рублей восьмидесяти восьми копеек");
    
КонецПроцедуры

Процедура СклонениеСНеизменяемымСловом() Экспорт

	//если перед словом поставить символ "\", данное слово не будет изменено:
	Результат = МенеджерСклонения.daСклонение("51 рубль \81 копейка", "Р", , "Ч");
	Ожидаем.Что(Результат).Равно("Пятидесяти одного рубля 81 копейки");
    
КонецПроцедуры

Процедура СклонениеЧислаБезПреобразованияВПропись() Экспорт
	
	//если перед числом поставить символ "^", данное слово будет склоняться без преобразования в пропись:
	Результат = МенеджерСклонения.daСклонение("^25 страница", "П", , "Ч");
	Ожидаем.Что(Результат).Равно("25-ти страницах");
		
КонецПроцедуры

Процедура СклонениеВВинительномПадежеНеодушевленныхСуществительных() Экспорт
	
	//для получения формы винительного падежа одушевленных существительных, используется специальный падеж "О" (винительный Одушевленный):
	Результат = МенеджерСклонения.daСклонение("41 мешок", "В", , "Ч");
	Ожидаем.Что(Результат).Равно("Сорок один мешок");
		
КонецПроцедуры

Процедура СклонениеВВинительномПадежеОдушевленныхСуществительных() Экспорт
    
    //для получения формы винительного падежа одушевленных существительных, используется специальный падеж "О" (винительный Одушевленный):
    Результат = МенеджерСклонения.daСклонение("41 маляр", "О", , "Ч");
	Ожидаем.Что(Результат).Равно("Сорок одного маляра");
		
КонецПроцедуры